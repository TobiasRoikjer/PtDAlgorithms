% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{reward_transform}
\alias{reward_transform}
\title{Performs a reward transformation, returning a phase-type distribution to model the total accumulated reward until abosorption}
\usage{
reward_transform(phase_type_graph, rewards)
}
\arguments{
\item{phase_type_graph}{A reference to the graph created by \code{\link[=create_graph]{create_graph()}}}

\item{rewards}{to give to each vertex, zero or positive real number. Must have length equal to \code{\link[=vertices_length]{vertices_length()}}}
}
\value{
A new phase-type graph with the reward transformation applied
}
\description{
Returns a new \code{phase_type_graph} to instead model accumulated rewards until absorption,
as described in the paper.
}
\examples{
graph <- ptdalgorithms::create_graph(4)
v1 <- ptdalgorithms::create_vertex(graph, c(1,2,3,4))
v2 <- ptdalgorithms::create_vertex(graph, c(4,0,3,3))
a <- ptdalgorithms::create_vertex(graph, c(0,0,0,0))
ptdalgorithms::add_edge(ptdalgorithms::starting_vertex(graph), v1, 1)
ptdalgorithms::add_edge(v1, v2, 4)
ptdalgorithms::add_edge(v2, a, 10)
graph <- ptdalgorithms::reward_transform(graph, ptdalgorithms::states(graph)[,2])
# Graph now only has starting state and vertex `v1 and the absorbing vertex `a`.
# With edge weight 4/2 = 2

}
